This is the readme file for yanoid - Yet Another Arkanoid.
The projects homepage is at http://www.sf.net/projects/yanoid/ 

----------------------------------------------------------------------
* NOTES FOR THE SDL CONTEST

Prior to configuring and installing yanoid, please make sure that you
have a dyncamic version of the Python library.

If you do not, the archive "dyn-python-lib.<date>.tgz" contains a
minor project that will create and install such a beast, from a static
version of the python libs.

Then, configure yanoid, with at least the following options:
./configure --disable-debug --enable-optimize-size 
and, make and install: 
make install-strip

This will ensure that yanoid is installed in its minimal form, fulfilling
the 1 MB size requirement of the contest. 

Thanks.

(Yanoid will work with a standard static version of the Python
library, but the yanoid binary will be approximatly 800 KB larger.)

* Required information

Name: Entry into contest is a group entry called "Yet Another arkaNOID"
(yanoid). The entry has been prepared in the period from the
announcement of the contest, until 1th December 2001, by:

Mads Bondo Dydensborg <mads@dydensborg.dk>
Jonas Christian Drewsen <jcd@xspect.dk>
Bjarke Sørensen	<bs@wasd.dk>

The entry is submitted by Mads Bondo Dydensborg on behalf of the
group.

City              : Copenhagen (Denmark, Scandinavia, Europe)
Game Title        : Yet Another arkaNOID (short: yanoid)
Brief description : A GPL SDL implementation of the classic game 
                    Arkanoid, in which a ball bounces on a map that 
                    has a number of bricks. As the ball hits bricks,  
                    they are removed from the map. If a ball leaves
                    the bottom of the screen, the ball is lost, and
                    the player looses a life. To avoid this, the
                    player can control a paddle on which the ball
                    bounces. Each time a brick is removed, the player
                    is awarded points. The aim of the game is to score
                    the most point.
                    Yanoid has been designed to be extensible and
                    flexible, allowing the game to be extended in
                    novel ways.
Build instructions: Please see the section "BUILDING YANOID"
Email address     : mads@dydensborg.dk
Web site          : http://www.sf.net/projects/yanoid/
Tools and libs    : Please see the section "REQUIREMENTS"
License           : Please see the section "LICENSE"
Time to compile   : Ppro 232: 157.19user 11.32system 3:28.01elapsed 
                    Cel 550 :  77.20user  5.82system 1:24.85elapsed
            

----------------------------------------------------------------------
* LICENSE

Yet Another arkaNOID is released under the GPL.

Copyright (C) 2001 Jonas Christian Drewsen <jcd@xspect.dk>, 
Bjarke Sørensen	<bs@wasd.dk> and 
Mads Bondo Dydensborg <mads@dydensborg.dk>
Copyright (C) 2001 contributers of the yanoid project
Please see the file "AUTHORS" for a list of contributers
 
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
 
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
 
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA   

----------------------------------------------------------------------
* REQUIREMENTS

Yanoid has only been tested under Linux, but should build on any
platform that supports the neccesary tools and libs. 

Yanoid uses the gnu autotools to (try to) autoconfigure it self, and
automate the build and install procedure. Ideally the process should
automatically identify any missing software, and inform about what is
needed to do to be able to build yanoid. However, this procedure has
been tested only for a limited number of distributions and to make it
easier to correct in case of errors, the following list of
requirements are given.

* Tools

Yanoid should compile with the ordinary GNU tools. Yanoid is known to
work with 
g++ version 2.96 (stl version from this compiler is?)
ld version 2.10.91
make version 3.79.1

* Libraries

A number of standard libraries are needed, as well as a number of
libraries that could be considered non-standard.

Standard libraries include:
glibc (libc & libstdc++), pthread, dl, util, m (math), X11 & Xext
These libraries should be present in any modern Linux installation
pr. default. For some distributions you may have to install "devel"
packages to be able to compile. (Eg, glibc-devel, etc).

Non-standard libraries or programs:
SDL, SDL_mixer, SDL_image, python<version > 2.0>, artsc,
esd, audiofile, vorbis, smpeg, jpeg, png, z, ogg & tiff.

SDL, SDL_mixer & SDL_image is in fact part of many distributions and
if you have a "correct" installation of the SDL, SDL_mixer and
SDL_image, the remaining libraries should be present. In other words,
the dependencies are introduced by the SDL libraries, and not directly
by yanoid. Depending on your installation you may need more or less of
these libraries. The important thing to note is that in some cases
you may need to install "devel" packages for these libraries as well.

----------------------------------------------------------------------
* BUILDING YANOID

Yanoid uses the GNU autotools, and configuration and installation
should be quite straightforward.

* Bootstrapping (only relevant for cvs users)

If you have checked out the sources from cvs, you should run the shell 
script "bootstrap", which will create the script "configure" for you.
For reasons not understood, it may be neccesary to run this script
twice to get the necessary files created.

* Configuration

If you have downloaded a tar ball, the configure script should already
be in place. Run "./configure --help" to get an overview of the options.

The file "INSTALL" provides generic installation instructions for the
configure script.

Note, for configuring for the SDL contest, please see the section 
"NOTES FOR THE SDL CONTEST" in the beginning of this document.

If configure fails, it is most likely because you are missing needed
libraries. The configure script will try to identify all missing
libraries when run, and will let you know what is missing.

* Compiling

After a succesfull configuration step, you can compile yanoid like
this:

$make

You will most likely get a number of warnings (mostly from compiling
the SDL_console source, which is provided as part of yanoid).

Compiling yanoid takes about 3-4 minutes on a Ppro 232 with 128 MB
ram.

If the installation fails and it is during the linking stage, it is
most likely because you have discovered a dependency on a library,
that the configure script does not take into account. A likely cause
is that you need a "devel" package for some library on your linux
system. Please install the necessary package and "make" again.

You are very welcome to write us, if you have problems with the yanoid
build process.

* Installing

You do not need to install yanoid to test it out. But if you wish, you
can issue the command

$make install

to install yanoid to the location you configured for (default
/usr/local/). Yanoid does not follow the LSB directions of installing
games to /usr/local/games/bin/yanoid, but instead installs to
/usr/local/bin/yanoid. Shared files are installed into
/usr/local/share/games/yanoid however. 

SDL contest note: To judge the size of yanoid, it will be neccesary to
install yanoid, as final linking against dynamic libraries, etc, are
done during installation.

----------------------------------------------------------------------
* RUNNING YANOID

After building yanoid, you can either issue the command
$src/yanoid
or, if you installed yanoid
$/path/to/yanoid
to run yanoid.

----------------------------------------------------------------------
* CONTROLS DURING GAME

* Menus

Use the arrow keys (up and down) to navigate the menus. Use enter or
space to select an item.

* Play

During play, use the arrow keys (left and right) to move the
paddle. Press the escape key to display the in game menu.

* Special keys

During play, you can press F3 to display the console and F11 to toogle
fullscreen mode. Please note, that to run in fullscreen, you should
have a 800x600 resolution defined for your X server.

----------------------------------------------------------------------
* BUGS

Why, of course. Look at the TODO file for _some_ of the known ones.

Please report bugs and/or send patches to
yanoid-devel@@lists.sourceforge.net - it will make you fell all warm
and fuzzy inside....

----------------------------------------------------------------------
* Final notes

You read this far? Amazing....

